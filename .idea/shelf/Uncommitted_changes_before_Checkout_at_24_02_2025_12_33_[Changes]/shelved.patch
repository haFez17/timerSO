Index: pythonProject/Timer/timer_app.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from TimerSO import *\r\n\r\n\r\nclass TimerThread(QThread):\r\n    update_signal = pyqtSignal(int)\r\n    finished_signal = pyqtSignal()\r\n\r\n    def __init__(self, total_seconds):\r\n        super().__init__()\r\n        self.time_left = total_seconds\r\n        self.running = True\r\n\r\n    def run(self):\r\n        while self.time_left > 0 and self.running:\r\n            self.sleep(1)\r\n            self.time_left -= 1\r\n            self.update_signal.emit(self.time_left)\r\n\r\n        if self.running:\r\n            self.finished_signal.emit()\r\n\r\n    def stop(self):\r\n        self.running = False\r\n\r\n\r\nclass AlarmThread(QThread):\r\n    alarm_signal = pyqtSignal()\r\n\r\n    def __init__(self, alarm_time):\r\n        super().__init__()\r\n        self.alarm_time = alarm_time\r\n        self.running = True\r\n\r\n    def run(self):\r\n        while self.running:\r\n            if QDateTime.currentDateTime() >= self.alarm_time:\r\n                self.alarm_signal.emit()\r\n                break\r\n            self.sleep(1)\r\n\r\n    def stop(self):\r\n        self.running = False\r\n\r\n\r\nclass TimerApp(QWidget):\r\n    def __init__(self):\r\n        super().__init__()\r\n\r\n        self.setWindowTitle(\"Таймер и Будильник\")\r\n        self.setGeometry(100, 100, 400, 300)\r\n        self.setStyleSheet(\"background-color: #2E2E2E; color: white;\")\r\n\r\n        self.layout = QVBoxLayout()\r\n        self.tabs = QTabWidget()\r\n\r\n        # Таймер\r\n        self.timer_tab = QWidget()\r\n        self.timer_layout = QVBoxLayout()\r\n        self.timer_label = QLabel(\"Оставшееся время: 0 сек\")\r\n        self.timer_label.setStyleSheet(\"font-size: 16px;\")\r\n        self.timer_input = QTimeEdit()\r\n        self.timer_input.setDisplayFormat(\"hh:mm:ss\")\r\n        self.timer_start_btn = QPushButton(\"Старт Таймера\")\r\n        self.timer_stop_btn = QPushButton(\"Остановить Таймер\")\r\n\r\n        self.timer_layout.addWidget(self.timer_label)\r\n        self.timer_layout.addWidget(self.timer_input)\r\n        self.timer_layout.addWidget(self.timer_start_btn)\r\n        self.timer_layout.addWidget(self.timer_stop_btn)\r\n        self.timer_tab.setLayout(self.timer_layout)\r\n\r\n        # Будильник\r\n        self.alarm_tab = QWidget()\r\n        self.alarm_layout = QVBoxLayout()\r\n        self.alarm_label = QLabel(\"Будильник: Не установлен\")\r\n        self.alarm_label.setStyleSheet(\"font-size: 16px;\")\r\n        self.alarm_input = QDateTimeEdit()\r\n        self.alarm_input.setDisplayFormat(\"dd.MM.yyyy hh:mm:ss\")\r\n        self.alarm_set_btn = QPushButton(\"Установить Будильник\")\r\n\r\n        self.alarm_layout.addWidget(self.alarm_label)\r\n        self.alarm_layout.addWidget(self.alarm_input)\r\n        self.alarm_layout.addWidget(self.alarm_set_btn)\r\n        self.alarm_tab.setLayout(self.alarm_layout)\r\n\r\n        # Вкладки\r\n        self.tabs.addTab(self.timer_tab, \"Таймер\")\r\n        self.tabs.addTab(self.alarm_tab, \"Будильник\")\r\n\r\n        self.layout.addWidget(self.tabs)\r\n        self.setLayout(self.layout)\r\n\r\n        # Логика таймера и будильника\r\n        self.timer_thread = None\r\n        self.alarm_thread = None\r\n\r\n        # Подключаем кнопки\r\n        self.timer_start_btn.clicked.connect(self.start_timer)\r\n        self.timer_stop_btn.clicked.connect(self.stop_timer)\r\n        self.alarm_set_btn.clicked.connect(self.set_alarm)\r\n\r\n    def start_timer(self):\r\n        if self.timer_thread and self.timer_thread.isRunning():\r\n            return\r\n\r\n        time = self.timer_input.time()\r\n        total_seconds = time.hour() * 3600 + time.minute() * 60 + time.second()\r\n\r\n        if total_seconds == 0:\r\n            return\r\n\r\n        self.timer_thread = TimerThread(total_seconds)\r\n        self.timer_thread.update_signal.connect(self.update_timer_label)\r\n        self.timer_thread.finished_signal.connect(self.show_timer_finished)\r\n        self.timer_thread.start()\r\n\r\n    def update_timer_label(self, time_left):\r\n        self.timer_label.setText(f\"Оставшееся время: {time_left} сек\")\r\n\r\n    def stop_timer(self):\r\n        if self.timer_thread:\r\n            self.timer_thread.stop()\r\n            self.timer_thread = None\r\n            self.timer_label.setText(\"Таймер остановлен\")\r\n\r\n    def set_alarm(self):\r\n        if self.alarm_thread and self.alarm_thread.isRunning():\r\n            return  \r\n\r\n        alarm_time = self.alarm_input.dateTime()\r\n        self.alarm_label.setText(f\"Будильник установлен на {alarm_time.toString()}\")\r\n\r\n        self.alarm_thread = AlarmThread(alarm_time)\r\n        self.alarm_thread.alarm_signal.connect(self.show_alarm_popup)\r\n        self.alarm_thread.start()\r\n\r\n    def show_timer_finished(self):\r\n        QMessageBox.information(self, \"Таймер\", \"Таймер завершился!\")\r\n\r\n    def show_alarm_popup(self):\r\n        msg_box = QMessageBox(self)\r\n        msg_box.setWindowTitle(\"Будильник!\")\r\n        msg_box.setText(\"Будильник прозвенел!\")\r\n        stop_btn = msg_box.addButton(\"Остановить\", QMessageBox.ButtonRole.AcceptRole)\r\n        snooze_btn = msg_box.addButton(\"Попозже (+15 минут)\", QMessageBox.ButtonRole.ActionRole)\r\n\r\n        msg_box.exec()\r\n\r\n        if msg_box.clickedButton() == snooze_btn:\r\n            self.snooze_alarm()\r\n\r\n    def snooze_alarm(self):\r\n        if self.alarm_thread:\r\n            self.alarm_thread.stop()\r\n\r\n        new_time = QDateTime.currentDateTime().addSecs(900)\r\n        self.alarm_input.setDateTime(new_time)\r\n        self.set_alarm()\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    app = QApplication(sys.argv)\r\n    window = TimerApp()\r\n    window.show()\r\n    sys.exit(app.exec())
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pythonProject/Timer/timer_app.py b/pythonProject/Timer/timer_app.py
--- a/pythonProject/Timer/timer_app.py	(revision 018be0c88a0e653f29329aaf74a7dd013638c7f2)
+++ b/pythonProject/Timer/timer_app.py	(date 1740393178784)
@@ -125,7 +125,7 @@
 
     def set_alarm(self):
         if self.alarm_thread and self.alarm_thread.isRunning():
-            return  
+            return
 
         alarm_time = self.alarm_input.dateTime()
         self.alarm_label.setText(f"Будильник установлен на {alarm_time.toString()}")
@@ -162,4 +162,4 @@
     app = QApplication(sys.argv)
     window = TimerApp()
     window.show()
-    sys.exit(app.exec())
\ No newline at end of file
+    sys.exit(app.exec())
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"218fe3e4-b41f-4540-beea-e1690f4d0b38\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/pythonProject/Timer/TimerSO.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/pythonProject/Timer/TimerSO.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 2\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2tM8ltUEDxDaAMjKNgR23PCrkWJ\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"ASKED_SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"Python.setup.executor\": \"Run\",\r\n    \"Python.timer_app.executor\": \"Run\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"git-widget-placeholder\": \"omar\",\r\n    \"last_opened_file_path\": \"C:/Users/Omarchik/Desktop/timerSO\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-5c90d61e3bab-JavaScript-PY-242.23339.19\" />\r\n        <option value=\"bundled-python-sdk-0029f7779945-399fe30bd8c1-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-242.23339.19\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"218fe3e4-b41f-4540-beea-e1690f4d0b38\" name=\"Changes\" comment=\"\" />\r\n      <created>1740150736678</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1740150736678</updated>\r\n      <workItem from=\"1740150737734\" duration=\"1172000\" />\r\n      <workItem from=\"1740151926374\" duration=\"2190000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/timerSO$setup.coverage\" NAME=\"setup Coverage Results\" MODIFIED=\"1740153253882\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$USER_HOME$/AppData/Local/Temp/Rar$DIa15908.5538.rartemp\" />\r\n    <SUITE FILE_PATH=\"coverage/timerSO$timer_app.coverage\" NAME=\"timer_app Coverage Results\" MODIFIED=\"1740153619264\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/pythonProject/Timer\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 018be0c88a0e653f29329aaf74a7dd013638c7f2)
+++ b/.idea/workspace.xml	(date 1740393180559)
@@ -6,7 +6,7 @@
   <component name="ChangeListManager">
     <list default="true" id="218fe3e4-b41f-4540-beea-e1690f4d0b38" name="Changes" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/pythonProject/Timer/TimerSO.py" beforeDir="false" afterPath="$PROJECT_DIR$/pythonProject/Timer/TimerSO.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/pythonProject/Timer/timer_app.py" beforeDir="false" afterPath="$PROJECT_DIR$/pythonProject/Timer/timer_app.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -31,23 +31,23 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "Python.setup.executor": "Run",
-    "Python.timer_app.executor": "Run",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "git-widget-placeholder": "omar",
-    "last_opened_file_path": "C:/Users/Omarchik/Desktop/timerSO",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "nodejs_package_manager_path": "npm",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;Python.setup.executor&quot;: &quot;Run&quot;,
+    &quot;Python.timer_app.executor&quot;: &quot;Run&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;omar&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/Omarchik/Desktop/timerSO&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
   <component name="SharedIndexes">
     <attachedChunks>
       <set>
@@ -65,7 +65,9 @@
       <option name="presentableId" value="Default" />
       <updated>1740150736678</updated>
       <workItem from="1740150737734" duration="1172000" />
-      <workItem from="1740151926374" duration="2190000" />
+      <workItem from="1740151926374" duration="2440000" />
+      <workItem from="1740154447817" duration="105000" />
+      <workItem from="1740390867548" duration="2263000" />
     </task>
     <servers />
   </component>
@@ -74,6 +76,6 @@
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
     <SUITE FILE_PATH="coverage/timerSO$setup.coverage" NAME="setup Coverage Results" MODIFIED="1740153253882" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$USER_HOME$/AppData/Local/Temp/Rar$DIa15908.5538.rartemp" />
-    <SUITE FILE_PATH="coverage/timerSO$timer_app.coverage" NAME="timer_app Coverage Results" MODIFIED="1740153619264" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/pythonProject/Timer" />
+    <SUITE FILE_PATH="coverage/timerSO$timer_app.coverage" NAME="timer_app Coverage Results" MODIFIED="1740392967748" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/pythonProject/Timer" />
   </component>
 </project>
\ No newline at end of file
